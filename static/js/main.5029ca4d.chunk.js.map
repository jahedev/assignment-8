{"version":3,"sources":["App.js","component/TableCell.jsx","component/TableRow.jsx","component/Table.jsx","component/Button.jsx","component/Toolbar.jsx","index.js"],"names":["table","TableCell","props","this","color","style","backgroundColor","className","colNum","data","Component","TableRow","cols","i","colgrid","push","rowNum","Table","rows","grid","id","Button","onClick","func","name","Toolbar","key","toolbar","map","button","React","limit","updateGrid","events","mouseDown","mouseLeft","App","addRow","state","setState","addCol","delRow","delCol","fillAll","j","fillUncolored","clearAll","setTimeout","changeColor","hex","updateColor","e","target","tagName","Number","parentNode","handleColoring","bind","document","querySelector","onmousedown","onmouseup","addEventListener","onChange","onMouseOver","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5029ca4d.chunk.js","sourcesContent":["// React\nimport React, { Component } from 'react';\nimport Table from './component/Table';\nimport Toolbar from './component/Toolbar';\nimport { SketchPicker } from 'react-color';\n\n// CSS\nimport './styles/app.css';\n\n// user is never allowed to add more than \"limit\"\n// number of rows or cols\nvar limit = 25;\n\n// This 2D array is used to save user's colors before\n// it is saved to this.state.grid\nvar updateGrid = [[]];\n\n// Mouse Events on Table\nvar table;\nvar events = {\n  mouseDown: false,\n  mouseLeft: true,\n};\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: 10,\n      cols: 10,\n      grid: [[]],\n      color: '#ff577f', // default color\n    };\n\n    this.addRow = this.addRow.bind(this);\n    this.addCol = this.addCol.bind(this);\n    this.delRow = this.delRow.bind(this);\n    this.delCol = this.delCol.bind(this);\n    this.fillAll = this.fillAll.bind(this);\n    this.fillUncolored = this.fillUncolored.bind(this);\n    this.clearAll = this.clearAll.bind(this);\n    this.updateColor = this.updateColor.bind(this);\n    this.updateGrid = this.updateGrid.bind(this);\n    this.handleColoring = this.handleColoring.bind(this);\n  }\n\n  componentWillMount() {\n    for (var i = 0; i < limit; i++) {\n      updateGrid[i] = []; // <===== initialize the row\n      for (var j = 0; j < limit; j++) {\n        updateGrid[i][j] = '';\n      }\n    }\n\n    this.updateGrid();\n  }\n\n  componentDidMount() {\n    // colorHeader(document.querySelector('h1'));\n    table = document.querySelector('.table');\n\n    table.onmousedown = function () {\n      events.mouseDown = true;\n    };\n    table.onmouseup = function () {\n      events.mouseDown = false;\n    };\n\n    table.addEventListener('click', (e) => this.updateColor(e));\n    table.addEventListener('mouseleave', (e) => (events.mouseLeft = true));\n    table.addEventListener('mousedown', (e) => {\n      events.mouseLeft = false;\n      this.updateColor(e);\n    });\n  }\n\n  /* #region : class methods */\n\n  addRow = (n = 1) => {\n    this.updateGrid();\n    if (this.state.rows < limit) this.setState({ rows: ++this.state.rows });\n  };\n\n  addCol = (n = 1) => {\n    this.updateGrid();\n    if (this.state.cols < limit) this.setState({ cols: ++this.state.cols });\n  };\n\n  delRow = (n = 1) => {\n    this.updateGrid();\n    this.state.rows > 1 && this.setState({ rows: --this.state.rows });\n  };\n\n  delCol = (n = 1) => {\n    this.updateGrid();\n    this.state.cols > 1 && this.setState({ cols: --this.state.cols });\n  };\n\n  fillAll = () => {\n    for (var i = 0; i < limit; i++) {\n      for (var j = 0; j < limit; j++) {\n        updateGrid[i][j] = this.state.color;\n      }\n    }\n    this.updateGrid();\n  };\n\n  fillUncolored = () => {\n    for (var i = 0; i < limit; i++) {\n      for (var j = 0; j < limit; j++) {\n        if (updateGrid[i][j] == '') updateGrid[i][j] = this.state.color;\n      }\n    }\n    this.updateGrid();\n  };\n\n  clearAll = () => {\n    // this method fills the whole grid witha color and\n    // then clears it after 300ms, otherwise for some reason\n    // react does not re-render.\n    this.fillAll();\n    setTimeout(() => {\n      for (var i = 0; i < limit; i++) {\n        for (var j = 0; j < limit; j++) {\n          updateGrid[i][j] = '';\n        }\n      }\n      this.updateGrid();\n    }, 300);\n  };\n\n  changeColor = (color) => {\n    this.setState({ color: color.hex });\n  };\n\n  updateGrid = () => {\n    this.setState({ grid: updateGrid });\n  };\n\n  updateColor = (e) => {\n    // colors a TD and saves changes to updateGrid\n    // without changing this.state.grid\n    if (e.target.tagName == 'TD') {\n      const td = e.target;\n      const color = this.state.color;\n\n      let colNum = Number(e.target.className);\n      let rowNum = Number(e.target.parentNode.className);\n\n      // save changes to updateGrid and color the table\n      updateGrid[rowNum][colNum] = color;\n      e.target.style.backgroundColor = color;\n    }\n  };\n\n  handleColoring = (e) => {\n    if (events.mouseDown && !events.mouseLeft) {\n      this.updateColor(e);\n    }\n  };\n\n  /* #endregion : class methods */\n\n  render() {\n    return (\n      <div>\n        <div className='header-container'>\n          <h1>\n            <span className='red'>React.js</span> Color Grid\n          </h1>\n          {\n            <Toolbar\n              toolbar={[\n                { name: 'Add Row', func: this.addRow },\n                { name: 'Add Column', func: this.addCol },\n                { name: 'Del Row', func: this.delRow },\n                { name: 'Del Column', func: this.delCol },\n                { name: 'Fill All', func: this.fillAll },\n                { name: 'Fill Uncolored', func: this.fillUncolored },\n                { name: 'Clear All', func: this.clearAll },\n              ]}\n            />\n          }\n        </div>\n        <h5>\n          Rows: {this.state.rows}, Cols: {this.state.cols}\n        </h5>\n        <div className='separated-columns'>\n          <div className='sketcher-picker'>\n            {/* A third party color picker library */}\n            <SketchPicker\n              color={this.state.color}\n              onChange={this.changeColor}\n            />\n          </div>\n          <div className='table' onMouseOver={this.handleColoring}>\n            <Table\n              key={this.state.rows * this.state.cols}\n              rows={this.state.rows}\n              cols={this.state.cols}\n              grid={this.state.grid}\n              color={this.state.color}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nclass TableCell extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { color = '' } = this.props;\n\n    return (\n      <td style={{ backgroundColor: color }} className={this.props.colNum}>\n        {this.props.data}\n      </td>\n    );\n  }\n}\n\nexport default TableCell;\n","import React, { Component } from 'react';\nimport TableCell from './TableCell';\n\nvar colNum = 0;\n\nclass TableRow extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let cols = [];\n    for (let i = 1; i <= this.props.cols; i++) {\n      let color = this.props.colgrid[i - 1];\n      cols.push(\n        <TableCell color={color} colNum={colNum++} key={i} data='&nbsp;' />\n      );\n    }\n    colNum = 0;\n    return <tr className={this.props.rowNum}>{cols}</tr>;\n  }\n}\n\nexport default TableRow;\n","// React\nimport React, { Component } from 'react';\nimport TableRow from './TableRow';\n\n// CSS\nimport '../styles/table.css';\n\nvar rowNum = 0;\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let rows = [];\n    for (let i = 1; i <= this.props.rows; i++) {\n      let colgrid = this.props.grid[i - 1];\n      let color = rows.push(\n        <TableRow\n          colgrid={colgrid}\n          rowNum={rowNum++}\n          key={i}\n          cols={this.props.cols}\n          color={this.props.color}\n        />\n      );\n    }\n\n    rowNum = 0;\n\n    return (\n      <div id='content'>\n        <table>\n          <tbody>{rows}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from 'react';\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return <button onClick={this.props.func}>{this.props.name}</button>;\n  }\n}\n\nexport default Button;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Button from './Button';\n\nclass Toolbar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  key = 7799966; // random key\n\n  render() {\n    return (\n      <div className='toolbar'>\n        {this.props.toolbar.map((button) => (\n          <Button\n            key={++this.key}\n            name={button['name']}\n            func={button['func']}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}